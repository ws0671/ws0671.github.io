{"componentChunkName":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-posts-bye-mdx","path":"/blog/bye-everyone/","result":{"data":{"mdx":{"body":"\r\n# React의 개념과 장점, 그리고 컴포넌트란 무엇인가요?\r\n\r\n## 1. 질문의 의도\r\n\r\n프론트엔드에서 자주 사용되는 react의 개념에 대해 알고있는가?\r\n\r\n## 2. 개념 설명\r\n\r\nUI를 구축하기 위한 자바스크립트 프론트엔드 라이브러리\r\n\r\n장점:\r\n\r\n- virtual DOM을 사용해서 어플리케이션의 성능을 향상시킴\r\n- 컴포넌트의 가독성이 높고 유지보수가 쉬움\r\n- 다른 프레임워크와 혼용 가능\r\n\r\n다른 프레임워크나 라이브러리와 혼용 가능 React 에선 UI만 신경쓰고(View), 빠져있는 부분은 필요한 라이브러리를 사용하여 설정 가능\r\n\r\n컴포넌트 : 작은 단위로 만들어져 그것을 조립하듯이 개발하는 방법으로, 캡슐화, 확장설, 결합성, 재사용성의 이점이 있음\r\n\r\n가상 돔(virtual DOM):\r\n가상 DOM은 DOM이 생성되기 전, 이전 상태와 수정사항을 비교하여 달라진 부분만 DOM에게 전달한다. 그래서 바뀐 부분만 렌더링 할 수 있다. 만약 DOM을 직접 변경한다면 사소한 변경사항에도 전체가 재렌더링 되는 비효율이 생긴다.\r\n\r\n## 3. 답변\r\n\r\nReact란 UI를 구축하기 위한 자바스크립트 프론트엔드 라이브러리입니다. 장점은 virtual DOM을 사용해서 어플리케이션의 성능을 향상시키고 클라이언트 사이드 렌더링이 가능합니다. 또한 다른 프레임워크와 같이 사용이 가능하며, 컴포넌트를 만들어서 사용하는데 가독성이 높고 유지보수가 쉽습니다. 컴포넌트란 작은 단위의 모듈을 만들어서 그것들을 조립하여 개발하는 방법입니다. 컴포넌트를 사용하면 캡슐화, 확장성, 결합성, 재사용성과 같은 이점이 있습니다.\r\n\r\n# 출처\r\n\r\n- https://www.howdy-mj.me/dom/what-is-dom/\r\n- https://velog.io/@ye-ji/React-%EC%98%88%EC%83%81-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8\r\n- https://kangdanne.tistory.com/189?category=1009227 [Hello, Dan:d World!:티스토리]\r\n","frontmatter":{"author":"니꼬","tags":"Nextjs","headerImage":"hello.jpg","date":"2022.10.29","title":"bye","slug":"bye-everyone"}}},"pageContext":{"id":"ac832b66-f103-52ff-a5c2-2fbcd9c7ea61","frontmatter__slug":"bye-everyone","__params":{"frontmatter__slug":"bye-everyone"},"frontmatter":{"title":"bye","tags":"Nextjs","date":"2022-10-29","author":"니꼬","slug":"bye-everyone","headerImage":"hello.jpg"}}},"staticQueryHashes":["1235057314","3250641605"],"slicesMap":{}}