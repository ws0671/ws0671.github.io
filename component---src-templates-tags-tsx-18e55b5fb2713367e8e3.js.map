{"version":3,"file":"component---src-templates-tags-tsx-18e55b5fb2713367e8e3.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/Pagination.tsx","webpack://my-gatsby-site/./src/templates/tags.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\ninterface IPaginationProps {\r\n  currentPage: number;\r\n  numPages: number;\r\n}\r\n\r\nexport default function Pagination({\r\n  currentPage,\r\n  numPages,\r\n  location,\r\n}: IPaginationProps) {\r\n  const urlNumber = +location.pathname.slice(-2, -1) || 0;\r\n\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage =\r\n    currentPage - 1 === 1\r\n      ? `${location.pathname.split(\"page\")[0]}`\r\n      : `${location.pathname.split(\"page\")[0]}page/${currentPage - 1}`;\r\n  const nextPage = `${location.pathname.split(\"page\")[0]}page/${\r\n    currentPage + 1\r\n  }`;\r\n  return (\r\n    <div className=\"flex items-center space-x-3 text-3xl text-gray-500 \">\r\n      {/* 이전 페이지 링크 */}\r\n      {!isFirst && (\r\n        <Link to={prevPage}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth={1.5}\r\n            stroke=\"currentColor\"\r\n            className=\" h-6 w-6 hover:text-blue-500\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M15.75 19.5L8.25 12l7.5-7.5\"\r\n            />\r\n          </svg>\r\n        </Link>\r\n      )}\r\n\r\n      {/* 페이지 번호 표시 */}\r\n      {Array.from({ length: numPages }, (_, i) => (\r\n        <Link\r\n          className={`${\r\n            urlNumber === i + 1 ? \"border-b border-black text-blue-500\" : \"\"\r\n          }${\r\n            !urlNumber && urlNumber === i\r\n              ? \"border-b border-black text-blue-500\"\r\n              : \"\"\r\n          } hover:border-b hover:border-black hover:text-blue-500`}\r\n          key={`page-${i + 1}`}\r\n          to={`${\r\n            i === 0\r\n              ? `${location.pathname.split(\"page\")[0]}`\r\n              : `${location.pathname.split(\"page\")[0]}page/${i + 1}`\r\n          }`}\r\n        >\r\n          {i + 1}\r\n        </Link>\r\n      ))}\r\n      {/* 다음 페이지 링크 */}\r\n      {!isLast && (\r\n        <Link to={nextPage}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth={1.5}\r\n            stroke=\"currentColor\"\r\n            className=\" h-6 w-6 hover:text-blue-500\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"\r\n            />\r\n          </svg>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, graphql, PageProps } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Tag from \"../components/Tag\";\r\nimport Seo from \"../components/Seo\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\ninterface IBlogTagsTemplateProps {\r\n  data: Queries.BlogTagsTemplateQuery;\r\n  tag: string;\r\n}\r\nexport default function Tags({\r\n  pageContext,\r\n  data,\r\n  location,\r\n}: PageProps<IBlogTagsTemplateProps>) {\r\n  const { tag, currentPage, numPages } = pageContext;\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <main className=\"m-auto flex w-[80%]\">\r\n          <div className=\" relative w-[20%] after:absolute after:right-0 after:after:block after:h-[540px] after:w-0.5 after:bg-gradient-to-b after:from-[#e6e6e6] after:to-[#fff] after:content-['']\">\r\n            <Tag />\r\n          </div>\r\n          <div className=\" w-[80%] pl-10\">\r\n            <h1 className=\"mb-10 text-6xl font-bold\">{tag}</h1>\r\n            {data.allMdx.nodes.map((file) => (\r\n              <div className=\"mb-10\" key={file.id}>\r\n                <div className=\"font-bold text-gray-400\">\r\n                  {file.frontmatter?.date}{\" \"}\r\n                  <span className=\"ml-1 font-bold text-blue-500\">\r\n                    {file.frontmatter?.tags?.toUpperCase()}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"mb-6 text-4xl font-bold \">\r\n                  <Link\r\n                    className=\"border-black hover:border-b\"\r\n                    to={`/blog/${file.frontmatter?.slug}`}\r\n                  >\r\n                    {file.frontmatter?.title}\r\n                  </Link>\r\n                </div>\r\n                <div className=\"text-xl\">{file.excerpt}</div>\r\n              </div>\r\n            ))}\r\n            <Pagination\r\n              location={location}\r\n              currentPage={currentPage}\r\n              numPages={numPages}\r\n            />\r\n          </div>\r\n        </main>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\nexport const pageQuery = graphql`\r\n  query BlogTagsTemplate($tag: String, $skip: Int!, $limit: Int!) {\r\n    allMdx(\r\n      sort: { frontmatter: { date: DESC } }\r\n      limit: $limit\r\n      skip: $skip\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        excerpt(pruneLength: 20)\r\n        frontmatter {\r\n          title\r\n          tags\r\n          date(formatString: \"YYYY.MM.DD\")\r\n          author\r\n          slug\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head = ({ pageContext }) => (\r\n  <Seo title={`Tagged as \"${pageContext.tag}\"`} />\r\n);\r\n"],"names":["Pagination","currentPage","numPages","location","urlNumber","pathname","slice","isFirst","isLast","prevPage","split","nextPage","React","className","Link","to","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","Array","from","length","_","i","key","Tags","pageContext","data","tag","Layout","Tag","allMdx","nodes","map","file","id","frontmatter","_file$frontmatter","date","_file$frontmatter2","tags","_file$frontmatter2$ta","toUpperCase","_file$frontmatter3","slug","_file$frontmatter4","title","excerpt","Head","_ref2","Seo"],"sourceRoot":""}