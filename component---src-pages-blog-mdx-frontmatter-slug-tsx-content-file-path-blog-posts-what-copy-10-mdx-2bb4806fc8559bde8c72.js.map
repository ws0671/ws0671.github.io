{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-posts-what-copy-10-mdx-2bb4806fc8559bde8c72.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,cAAoBA,EAAAA,SAC7B,CAKA,MAJA,SAAoBD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOE,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOJ,EAAYF,EAAAA,cAAoBE,EAAWH,EAAOC,EAAAA,cAAoBF,EAAmBC,IAAUD,GAC5G,E,6BCJA,SAASS,EAASC,GAChB,IAAIC,EAAWC,EAAuBC,EAAYC,EAClD,IAAI,KAACC,EAAI,SAAEC,GAAYN,EACvB,OAAOR,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,OAAQ,CACnEgB,UAAW,oBACVhB,EAAAA,cAAoB,KAAM,CAC3BgB,UAAW,sBACiB,QAA1BP,EAAYI,EAAKI,WAA+B,IAAdR,GAAoF,QAAnDC,EAAwBD,EAAUS,mBAAmD,IAA1BR,OAArE,EAAiHA,EAAsBS,OAAQnB,EAAAA,cAAoB,KAAM,CACpOgB,UAAW,+BACkB,QAA3BL,EAAaE,EAAKI,WAAgC,IAAfN,GAAsF,QAApDC,EAAwBD,EAAWO,mBAAmD,IAA1BN,OAAtE,EAAkHA,EAAsBQ,MAAOpB,EAAAA,cAAoB,UAAW,CAC3OgB,UAAW,mCACVF,GAAWd,EAAAA,cAAoBqB,EAAAA,EAAS,OAC7C,CACe,SAASC,EAAiBvB,GACvC,OAAOC,EAAAA,cAAoBO,EAAUR,EAAOC,EAAAA,cAAoBuB,EAAqBxB,GACvF,CACA,MACayB,EAAOC,IAClB,IAAIC,EAAYC,EAChB,IAAI,KAACd,GAAQY,EACb,OAAOzB,EAAAA,cAAoB4B,EAAAA,EAAK,CAC9BT,MAAmC,QAA3BO,EAAab,EAAKI,WAAgC,IAAfS,GAAsF,QAApDC,EAAwBD,EAAWR,mBAAmD,IAA1BS,OAAtE,EAAkHA,EAAsBR,OAC3M,C,oECzBW,SAASE,IACtB,MAAMQ,GAAaC,EAAAA,EAAAA,QAAuB,MAa1C,OAZAC,EAAAA,EAAAA,YAAU,KAAO,IAAD,EACd,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,gCACbH,EAAOI,OAAQ,EACfJ,EAAOK,aAAa,OAAQ,2BAC5BL,EAAOK,aAAa,aAAc,YAClCL,EAAOK,aAAa,QAAS,WAC7BL,EAAOK,aAAa,QAAS,gBAC7BL,EAAOK,aAAa,cAAe,aAEjB,QAAlB,EAAAR,EAAWS,eAAO,OAAlBC,EAAoBC,YAAYR,EAAO,GACtC,IACIhC,EAAAA,cAAAA,MAAAA,CAAKgB,UAAU,QAAQyB,IAAKZ,GACrC,C,+ECXe,SAASD,EAAI,GAAuB,IAAD,QAAtB,MAAET,GAAkB,EAC9C,MAAMN,GAAO6B,EAAAA,EAAAA,gBAAc,cAW3B,OACE1C,EAAAA,cAAAA,QAAAA,KACGmB,EAAM,MAAa,QAAV,EAACN,EAAK8B,YAAI,OAAc,QAAd,EAATC,EAAWC,oBAAY,WAAd,EAATC,EAAyB3B,MAG1C,C,sECUO,MAAM4B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB1C,GAC/B,MAAM2C,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfzC,EACFA,EAAW2C,GAGb,IAAIA,KAAsB3C,IAChC,CAAC2C,EAAmB3C,GACzB,C","sources":["webpack://my-gatsby-site/./blog-posts/what copy 10.mdx","webpack://my-gatsby-site/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://my-gatsby-site/./src/components/Comment.tsx","webpack://my-gatsby-site/./src/components/Seo.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/my-gatsby-site/blog-posts/what copy 10.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport Comment from \"../../components/Comment\";\nfunction BlogPost(_ref) {\n  var _data$mdx, _data$mdx$frontmatter, _data$mdx2, _data$mdx2$frontmatte;\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"main\", {\n    className: \"mx-auto w-[60vw]\"\n  }, React.createElement(\"h1\", {\n    className: \"text-6xl font-bold\"\n  }, (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title), React.createElement(\"h3\", {\n    className: \"mt-10 text-lg text-gray-400\"\n  }, (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$frontmatte = _data$mdx2.frontmatter) === null || _data$mdx2$frontmatte === void 0 ? void 0 : _data$mdx2$frontmatte.date), React.createElement(\"article\", {\n    className: \"prose prose-xl mt-10 max-w-none\"\n  }, children), React.createElement(Comment, null)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"2799787424\";\nexport const Head = _ref2 => {\n  var _data$mdx3, _data$mdx3$frontmatte;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: (_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : (_data$mdx3$frontmatte = _data$mdx3.frontmatter) === null || _data$mdx3$frontmatte === void 0 ? void 0 : _data$mdx3$frontmatte.title\n  });\n};\n","import React, { useRef, useEffect, HtmlHTMLAttributes } from \"react\";\r\n\r\nexport default function Comment() {\r\n  const commentRef = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://utteranc.es/client.js\";\r\n    script.async = true;\r\n    script.setAttribute(\"repo\", \"ws0671/ws0671.github.io\");\r\n    script.setAttribute(\"issue-term\", \"pathname\");\r\n    script.setAttribute(\"label\", \"comment\");\r\n    script.setAttribute(\"theme\", \"github-light\");\r\n    script.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n    commentRef.current?.appendChild(script);\r\n  }, []);\r\n  return <div className=\"py-10\" ref={commentRef} />;\r\n}\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\ninterface ISeoProps {\r\n  title: string;\r\n}\r\n\r\nexport default function Seo({ title }: ISeoProps) {\r\n  const data = useStaticQuery<Queries.SeoDataQuery>(graphql`\r\n    query SeoData {\r\n      site {\r\n        siteMetadata {\r\n          description\r\n          siteUrl\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  return (\r\n    <title>\r\n      {title} | {data.site?.siteMetadata?.title}\r\n    </title>\r\n  );\r\n}\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","BlogPost","_ref","_data$mdx","_data$mdx$frontmatter","_data$mdx2","_data$mdx2$frontmatte","data","children","Layout","className","mdx","frontmatter","title","date","Comment","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$mdx3","_data$mdx3$frontmatte","Seo","commentRef","useRef","useEffect","script","document","createElement","src","async","setAttribute","current","_commentRef$current","appendChild","ref","useStaticQuery","site","_data$site","siteMetadata","_data$site$siteMetada","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}